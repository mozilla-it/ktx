#!/usr/bin/env bash

# Copyright 2017 Heptio Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ktx() {
    # Test that we have a $HOME/.kube to work with
    if [ ! -d "${HOME}/.kube" ]; then
        echo "echo \"The following directory does not exist: ${HOME}/.kube. Exiting...\""
        return 1
    fi

    # Verify our $HOME/.kube isn't empty
    if [ -z "$(ls -A ${HOME}/.kube)" ]; then
        echo "echo \"No configs present in ${HOME}/.kube. Exiting...\""
        return 1
    fi

    # If no argument was given then list the files in $HOME/.kube
    if [ -z "$1" ]; then
      for kube in $(find "${HOME}/.kube" -maxdepth 1 -type f -o -type l); do
        if [[ "${KUBECONFIG}" == "$kube" ]]; then
          echo -n "(active) "
        fi
        if [[ $kube != *"/.sso-profiles" ]]; then
            echo $(basename "${kube}")
        fi
      done

      return
    fi

    # If argument is "None" then unset the KUBECONFIG variable
    if [[ "$1" == "none" ]] || [[ "$1" == "None" ]]; then
        unset KUBECONFIG
        if [[ -n $AWS_PROFILE ]]; then
            echo "AWS_PROFILE unchanged from '$AWS_PROFILE'."
        fi
        return
    fi

    # Disallow .sso-profiles as a config
    if [[ $1 == ".sso-profiles" ]]; then
        echo ".sso-profiles is a mapping of kube configs to AWS_PROFILE values. Exiting..."
        return 1
    fi

    # Verify config exists
    if [[ ! -e "${HOME}/.kube/${1}" ]]; then
        echo "echo \"The following file does not exist: ${HOME}/.kube/${1}. Exiting...\""
        return 1
    fi

    # Set AWS_PROFILE if found
    if [ -e "${HOME}/.kube/.sso-profiles" ]; then
        local ktx_sso
        ktx_sso="$( awk -v profile="$1" '{ if ($1==profile) printf $2 }' < "${HOME}/.kube/.sso-profiles" )"
        if [[ -n $ktx_sso ]]; then
            if [[ $ktx_sso == "ignore" ]]; then
                echo "AWS_PROFILE unchanged from '$AWS_PROFILE'."
            else
                if [[ $ktx_sso == "unset" ]]; then
                    ktx_sso=""
                fi
                if [[ -n $AWS_PROFILE ]]; then
                    if [[ $AWS_PROFILE == "$ktx_sso" ]]; then
                        echo "AWS_PROFILE already set to '$ktx_sso'."
                    else
                        echo "AWS_PROFILE changed from '$AWS_PROFILE' to '$ktx_sso'."
                    fi
                else
                    echo "AWS_PROFILE set to '$ktx_sso'."
                fi
                if [[ -n $ktx_sso ]]; then
                    export AWS_PROFILE="$ktx_sso"
                else
                    unset AWS_PROFILE
                    export AWS_PROFILE
                fi
            fi
        else
            echo "Missing AWS_PROFILE for '$1' in ${HOME}/.kube/.sso-profiles. Exiting..."
            return 1
        fi
    fi

    # Activate the config
    export KUBECONFIG="${HOME}/.kube/${1}"
}
